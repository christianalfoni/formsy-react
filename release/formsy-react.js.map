{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///formsy-react.js","webpack:///webpack/bootstrap ca57d84d15d913bab0aa","webpack:///./src/main.js","webpack:///external \"react\"","webpack:///./src/Mixin.js","webpack:///./src/utils.js","webpack:///./src/Decorator.js","webpack:///./src/HOC.js","webpack:///./src/validationRules.js","webpack:///./~/form-data-to-object/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","_extends","assign","arguments","length","source","key","_typeof","Symbol","iterator","constructor","React","Formsy","validationRules","formDataToObject","utils","Mixin","HOC","Decorator","options","emptyArray","defaults","passedOptions","addValidationRule","name","func","Form","createClass","displayName","getInitialState","isValid","isSubmitting","canChange","getDefaultProps","onSuccess","onError","onSubmit","onValidSubmit","onInvalidSubmit","onValid","onInvalid","onChange","validationErrors","preventExternalInvalidation","childContextTypes","formsy","PropTypes","object","getChildContext","_this","attachToForm","detachFromForm","validate","isFormDisabled","isValidValue","component","value","runValidation","componentWillMount","inputs","componentDidMount","validateForm","componentWillUpdate","prevInputNames","map","props","componentDidUpdate","setInputValidationErrors","newInputNames","arraysDiffer","reset","data","setFormPristine","resetModel","submit","event","preventDefault","model","getModel","updateInputsWithError","state","mapModel","mapping","toObj","reduce","mappedModel","keyArray","split","base","currentKey","shift","currentValues","getCurrentValues","forEach","setValue","resetValue","errors","args","_isValid","_validationError","setState","apply","isChanged","isSame","getPristineValues","_this2","index","find","Error","JSON","stringify","_externalError","disabled","_value","isPristine","_formSubmitted","_isPristine","validation","_isRequired","isRequired","error","validationError","validationResults","runRules","_validations","requiredResults","_requiredValidations","failed","success","filter","x","pos","arr","validations","results","validationMethod","push","_this3","onValidationComplete","allIsValid","every","bind","isMounted","componentPos","slice","concat","render","_props","nonFormsyProps","createElement","children","convertValidationsToObject","validateMethod","arg","parse","e","_pristineValue","contextTypes","configure","setValidations","required","context","componentWillReceiveProps","nextProps","prevProps","componentWillUnmount","isDefaultRequiredValue","getValue","hasValue","getErrorMessage","messages","getErrorMessages","showRequired","isFormSubmitted","showError","a","b","isDifferent","item","objectsDiffer","Array","isArray","toString","collection","fn","l","Component","mixins","getDisplayName","innerRef","propsForElement","ref","isExisty","undefined","isEmpty","values","matchRegexp","regexp","test","isUndefined","isEmptyString","isEmail","isUrl","isTrue","isFalse","isNumeric","isAlpha","isAlphanumeric","isInt","isFloat","isWords","isSpecialWords","isLength","equals","eql","equalsField","field","maxLength","minLength","output","parentKey","match","paths","replace","currentPath","pathKey","isNaN","fromObj","recur","newObj","propName","currVal","v"],"mappings":"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","file":"formsy-react.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Formsy\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Formsy\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Formsy\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Formsy\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar React = global.React || __webpack_require__(1);\n\tvar Formsy = {};\n\tvar validationRules = __webpack_require__(6);\n\tvar formDataToObject = __webpack_require__(7);\n\tvar utils = __webpack_require__(3);\n\tvar Mixin = __webpack_require__(2);\n\tvar HOC = __webpack_require__(5);\n\tvar Decorator = __webpack_require__(4);\n\tvar options = {};\n\tvar emptyArray = [];\n\t\n\tFormsy.Mixin = Mixin;\n\tFormsy.HOC = HOC;\n\tFormsy.Decorator = Decorator;\n\t\n\tFormsy.defaults = function (passedOptions) {\n\t  options = passedOptions;\n\t};\n\t\n\tFormsy.addValidationRule = function (name, func) {\n\t  validationRules[name] = func;\n\t};\n\t\n\tFormsy.Form = React.createClass({\n\t  displayName: 'Formsy',\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      isValid: true,\n\t      isSubmitting: false,\n\t      canChange: false\n\t    };\n\t  },\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      onSuccess: function onSuccess() {},\n\t      onError: function onError() {},\n\t      onSubmit: function onSubmit() {},\n\t      onValidSubmit: function onValidSubmit() {},\n\t      onInvalidSubmit: function onInvalidSubmit() {},\n\t      onValid: function onValid() {},\n\t      onInvalid: function onInvalid() {},\n\t      onChange: function onChange() {},\n\t      validationErrors: null,\n\t      preventExternalInvalidation: false\n\t    };\n\t  },\n\t\n\t  childContextTypes: {\n\t    formsy: React.PropTypes.object\n\t  },\n\t  getChildContext: function getChildContext() {\n\t    var _this = this;\n\t\n\t    return {\n\t      formsy: {\n\t        attachToForm: this.attachToForm,\n\t        detachFromForm: this.detachFromForm,\n\t        validate: this.validate,\n\t        isFormDisabled: this.isFormDisabled,\n\t        isValidValue: function isValidValue(component, value) {\n\t          return _this.runValidation(component, value).isValid;\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  // Add a map to store the inputs of the form, a model to store\n\t  // the values of the form and register child inputs\n\t  componentWillMount: function componentWillMount() {\n\t    this.inputs = [];\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this.validateForm();\n\t  },\n\t\n\t  componentWillUpdate: function componentWillUpdate() {\n\t    // Keep a reference to input names before form updates,\n\t    // to check if inputs has changed after render\n\t    this.prevInputNames = this.inputs.map(function (component) {\n\t      return component.props.name;\n\t    });\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate() {\n\t\n\t    if (this.props.validationErrors && _typeof(this.props.validationErrors) === 'object' && Object.keys(this.props.validationErrors).length > 0) {\n\t      this.setInputValidationErrors(this.props.validationErrors);\n\t    }\n\t\n\t    var newInputNames = this.inputs.map(function (component) {\n\t      return component.props.name;\n\t    });\n\t    if (utils.arraysDiffer(this.prevInputNames, newInputNames)) {\n\t      this.validateForm();\n\t    }\n\t  },\n\t\n\t  // Allow resetting to specified data\n\t  reset: function reset(data) {\n\t    this.setFormPristine(true);\n\t    this.resetModel(data);\n\t  },\n\t\n\t  // Update model, submit to url prop and send the model\n\t  submit: function submit(event) {\n\t\n\t    event && event.preventDefault();\n\t\n\t    // Trigger form as not pristine.\n\t    // If any inputs have not been touched yet this will make them dirty\n\t    // so validation becomes visible (if based on isPristine)\n\t    this.setFormPristine(false);\n\t    var model = this.getModel();\n\t    this.props.onSubmit(model, this.resetModel, this.updateInputsWithError);\n\t    this.state.isValid ? this.props.onValidSubmit(model, this.resetModel, this.updateInputsWithError) : this.props.onInvalidSubmit(model, this.resetModel, this.updateInputsWithError);\n\t  },\n\t\n\t  mapModel: function mapModel(model) {\n\t\n\t    if (this.props.mapping) {\n\t      return this.props.mapping(model);\n\t    } else {\n\t      return formDataToObject.toObj(Object.keys(model).reduce(function (mappedModel, key) {\n\t\n\t        var keyArray = key.split('.');\n\t        var base = mappedModel;\n\t        while (keyArray.length) {\n\t          var currentKey = keyArray.shift();\n\t          base = base[currentKey] = keyArray.length ? base[currentKey] || {} : model[key];\n\t        }\n\t\n\t        return mappedModel;\n\t      }, {}));\n\t    }\n\t  },\n\t\n\t  getModel: function getModel() {\n\t    var currentValues = this.getCurrentValues();\n\t    return this.mapModel(currentValues);\n\t  },\n\t\n\t  // Reset each key in the model to the original / initial / specified value\n\t  resetModel: function resetModel(data) {\n\t    this.inputs.forEach(function (component) {\n\t      var name = component.props.name;\n\t      if (data && data.hasOwnProperty(name)) {\n\t        component.setValue(data[name]);\n\t      } else {\n\t        component.resetValue();\n\t      }\n\t    });\n\t    this.validateForm();\n\t  },\n\t\n\t  setInputValidationErrors: function setInputValidationErrors(errors) {\n\t    this.inputs.forEach(function (component) {\n\t      var name = component.props.name;\n\t      var args = [{\n\t        _isValid: !(name in errors),\n\t        _validationError: typeof errors[name] === 'string' ? [errors[name]] : errors[name]\n\t      }];\n\t      component.setState.apply(component, args);\n\t    });\n\t  },\n\t\n\t  // Checks if the values have changed from their initial value\n\t  isChanged: function isChanged() {\n\t    return !utils.isSame(this.getPristineValues(), this.getCurrentValues());\n\t  },\n\t\n\t  getPristineValues: function getPristineValues() {\n\t    return this.inputs.reduce(function (data, component) {\n\t      var name = component.props.name;\n\t      data[name] = component.props.value;\n\t      return data;\n\t    }, {});\n\t  },\n\t\n\t  // Go through errors from server and grab the components\n\t  // stored in the inputs map. Change their state to invalid\n\t  // and set the serverError message\n\t  updateInputsWithError: function updateInputsWithError(errors) {\n\t    var _this2 = this;\n\t\n\t    Object.keys(errors).forEach(function (name, index) {\n\t      var component = utils.find(_this2.inputs, function (component) {\n\t        return component.props.name === name;\n\t      });\n\t      if (!component) {\n\t        throw new Error('You are trying to update an input that does not exist. ' + 'Verify errors object with input names. ' + JSON.stringify(errors));\n\t      }\n\t      var args = [{\n\t        _isValid: _this2.props.preventExternalInvalidation || false,\n\t        _externalError: typeof errors[name] === 'string' ? [errors[name]] : errors[name]\n\t      }];\n\t      component.setState.apply(component, args);\n\t    });\n\t  },\n\t\n\t  isFormDisabled: function isFormDisabled() {\n\t    return this.props.disabled;\n\t  },\n\t\n\t  getCurrentValues: function getCurrentValues() {\n\t    return this.inputs.reduce(function (data, component) {\n\t      var name = component.props.name;\n\t      data[name] = component.state._value;\n\t      return data;\n\t    }, {});\n\t  },\n\t\n\t  setFormPristine: function setFormPristine(isPristine) {\n\t    this.setState({\n\t      _formSubmitted: !isPristine\n\t    });\n\t\n\t    // Iterate through each component and set it as pristine\n\t    // or \"dirty\".\n\t    this.inputs.forEach(function (component, index) {\n\t      component.setState({\n\t        _formSubmitted: !isPristine,\n\t        _isPristine: isPristine\n\t      });\n\t    });\n\t  },\n\t\n\t  // Use the binded values and the actual input value to\n\t  // validate the input and set its state. Then check the\n\t  // state of the form itself\n\t  validate: function validate(component) {\n\t\n\t    // Trigger onChange\n\t    if (this.state.canChange) {\n\t      this.props.onChange(this.getCurrentValues(), this.isChanged());\n\t    }\n\t\n\t    var validation = this.runValidation(component);\n\t    // Run through the validations, split them up and call\n\t    // the validator IF there is a value or it is required\n\t    component.setState({\n\t      _isValid: validation.isValid,\n\t      _isRequired: validation.isRequired,\n\t      _validationError: validation.error,\n\t      _externalError: null\n\t    }, this.validateForm);\n\t  },\n\t\n\t  // Checks validation on current value or a passed value\n\t  runValidation: function runValidation(component, value) {\n\t\n\t    var currentValues = this.getCurrentValues();\n\t    var validationErrors = component.props.validationErrors;\n\t    var validationError = component.props.validationError;\n\t    value = arguments.length === 2 ? value : component.state._value;\n\t\n\t    var validationResults = this.runRules(value, currentValues, component._validations);\n\t    var requiredResults = this.runRules(value, currentValues, component._requiredValidations);\n\t\n\t    // the component defines an explicit validate function\n\t    if (typeof component.validate === \"function\") {\n\t      validationResults.failed = component.validate() ? [] : ['failed'];\n\t    }\n\t\n\t    var isRequired = Object.keys(component._requiredValidations).length ? !!requiredResults.success.length : false;\n\t    var isValid = !validationResults.failed.length && !(this.props.validationErrors && this.props.validationErrors[component.props.name]);\n\t\n\t    return {\n\t      isRequired: isRequired,\n\t      isValid: isRequired ? false : isValid,\n\t      error: function () {\n\t\n\t        if (isValid && !isRequired) {\n\t          return emptyArray;\n\t        }\n\t\n\t        if (validationResults.errors.length) {\n\t          return validationResults.errors;\n\t        }\n\t\n\t        if (this.props.validationErrors && this.props.validationErrors[component.props.name]) {\n\t          return typeof this.props.validationErrors[component.props.name] === 'string' ? [this.props.validationErrors[component.props.name]] : this.props.validationErrors[component.props.name];\n\t        }\n\t\n\t        if (isRequired) {\n\t          var error = validationErrors[requiredResults.success[0]];\n\t          return error ? [error] : null;\n\t        }\n\t\n\t        if (validationResults.failed.length) {\n\t          return validationResults.failed.map(function (failed) {\n\t            return validationErrors[failed] ? validationErrors[failed] : validationError;\n\t          }).filter(function (x, pos, arr) {\n\t            // Remove duplicates\n\t            return arr.indexOf(x) === pos;\n\t          });\n\t        }\n\t      }.call(this)\n\t    };\n\t  },\n\t\n\t  runRules: function runRules(value, currentValues, validations) {\n\t\n\t    var results = {\n\t      errors: [],\n\t      failed: [],\n\t      success: []\n\t    };\n\t    if (Object.keys(validations).length) {\n\t      Object.keys(validations).forEach(function (validationMethod) {\n\t\n\t        if (validationRules[validationMethod] && typeof validations[validationMethod] === 'function') {\n\t          throw new Error('Formsy does not allow you to override default validations: ' + validationMethod);\n\t        }\n\t\n\t        if (!validationRules[validationMethod] && typeof validations[validationMethod] !== 'function') {\n\t          throw new Error('Formsy does not have the validation rule: ' + validationMethod);\n\t        }\n\t\n\t        if (typeof validations[validationMethod] === 'function') {\n\t          var validation = validations[validationMethod](currentValues, value);\n\t          if (typeof validation === 'string') {\n\t            results.errors.push(validation);\n\t            results.failed.push(validationMethod);\n\t          } else if (!validation) {\n\t            results.failed.push(validationMethod);\n\t          }\n\t          return;\n\t        } else if (typeof validations[validationMethod] !== 'function') {\n\t          var validation = validationRules[validationMethod](currentValues, value, validations[validationMethod]);\n\t          if (typeof validation === 'string') {\n\t            results.errors.push(validation);\n\t            results.failed.push(validationMethod);\n\t          } else if (!validation) {\n\t            results.failed.push(validationMethod);\n\t          } else {\n\t            results.success.push(validationMethod);\n\t          }\n\t          return;\n\t        }\n\t\n\t        return results.success.push(validationMethod);\n\t      });\n\t    }\n\t\n\t    return results;\n\t  },\n\t\n\t  // Validate the form by going through all child input components\n\t  // and check their state\n\t  validateForm: function validateForm() {\n\t    var _this3 = this;\n\t\n\t    // We need a callback as we are validating all inputs again. This will\n\t    // run when the last component has set its state\n\t    var onValidationComplete = function () {\n\t      var allIsValid = this.inputs.every(function (component) {\n\t        return component.state._isValid;\n\t      });\n\t\n\t      this.setState({\n\t        isValid: allIsValid\n\t      });\n\t\n\t      if (allIsValid) {\n\t        this.props.onValid();\n\t      } else {\n\t        this.props.onInvalid();\n\t      }\n\t\n\t      // Tell the form that it can start to trigger change events\n\t      this.setState({\n\t        canChange: true\n\t      });\n\t    }.bind(this);\n\t\n\t    // Run validation again in case affected by other inputs. The\n\t    // last component validated will run the onValidationComplete callback\n\t    this.inputs.forEach(function (component, index) {\n\t      var validation = _this3.runValidation(component);\n\t      if (validation.isValid && component.state._externalError) {\n\t        validation.isValid = false;\n\t      }\n\t      component.setState({\n\t        _isValid: validation.isValid,\n\t        _isRequired: validation.isRequired,\n\t        _validationError: validation.error,\n\t        _externalError: !validation.isValid && component.state._externalError ? component.state._externalError : null\n\t      }, index === _this3.inputs.length - 1 ? onValidationComplete : null);\n\t    });\n\t\n\t    // If there are no inputs, set state where form is ready to trigger\n\t    // change event. New inputs might be added later\n\t    if (!this.inputs.length && this.isMounted()) {\n\t      this.setState({\n\t        canChange: true\n\t      });\n\t    }\n\t  },\n\t\n\t  // Method put on each input component to register\n\t  // itself to the form\n\t  attachToForm: function attachToForm(component) {\n\t\n\t    if (this.inputs.indexOf(component) === -1) {\n\t      this.inputs.push(component);\n\t    }\n\t\n\t    this.validate(component);\n\t  },\n\t\n\t  // Method put on each input component to unregister\n\t  // itself from the form\n\t  detachFromForm: function detachFromForm(component) {\n\t    var componentPos = this.inputs.indexOf(component);\n\t\n\t    if (componentPos !== -1) {\n\t      this.inputs = this.inputs.slice(0, componentPos).concat(this.inputs.slice(componentPos + 1));\n\t    }\n\t\n\t    this.validateForm();\n\t  },\n\t  render: function render() {\n\t    var _props = this.props,\n\t        mapping = _props.mapping,\n\t        validationErrors = _props.validationErrors,\n\t        onSubmit = _props.onSubmit,\n\t        onValid = _props.onValid,\n\t        onValidSubmit = _props.onValidSubmit,\n\t        onInvalid = _props.onInvalid,\n\t        onInvalidSubmit = _props.onInvalidSubmit,\n\t        onChange = _props.onChange,\n\t        reset = _props.reset,\n\t        preventExternalInvalidation = _props.preventExternalInvalidation,\n\t        onSuccess = _props.onSuccess,\n\t        onError = _props.onError,\n\t        nonFormsyProps = _objectWithoutProperties(_props, ['mapping', 'validationErrors', 'onSubmit', 'onValid', 'onValidSubmit', 'onInvalid', 'onInvalidSubmit', 'onChange', 'reset', 'preventExternalInvalidation', 'onSuccess', 'onError']);\n\t\n\t    return React.createElement(\n\t      'form',\n\t      _extends({}, nonFormsyProps, { onSubmit: this.submit }),\n\t      this.props.children\n\t    );\n\t  }\n\t});\n\t\n\tif (!global.exports && !global.module && (!global.define || !global.define.amd)) {\n\t  global.Formsy = Formsy;\n\t}\n\t\n\tmodule.exports = Formsy;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar utils = __webpack_require__(3);\n\tvar React = global.React || __webpack_require__(1);\n\t\n\tvar convertValidationsToObject = function convertValidationsToObject(validations) {\n\t\n\t  if (typeof validations === 'string') {\n\t\n\t    return validations.split(/\\,(?![^{\\[]*[}\\]])/g).reduce(function (validations, validation) {\n\t      var args = validation.split(':');\n\t      var validateMethod = args.shift();\n\t\n\t      args = args.map(function (arg) {\n\t        try {\n\t          return JSON.parse(arg);\n\t        } catch (e) {\n\t          return arg; // It is a string if it can not parse it\n\t        }\n\t      });\n\t\n\t      if (args.length > 1) {\n\t        throw new Error('Formsy does not support multiple args on string validations. Use object format of validations instead.');\n\t      }\n\t\n\t      validations[validateMethod] = args.length ? args[0] : true;\n\t      return validations;\n\t    }, {});\n\t  }\n\t\n\t  return validations || {};\n\t};\n\t\n\tmodule.exports = {\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      _value: this.props.value,\n\t      _isRequired: false,\n\t      _isValid: true,\n\t      _isPristine: true,\n\t      _pristineValue: this.props.value,\n\t      _validationError: [],\n\t      _externalError: null,\n\t      _formSubmitted: false\n\t    };\n\t  },\n\t  contextTypes: {\n\t    formsy: React.PropTypes.object // What about required?\n\t  },\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      validationError: '',\n\t      validationErrors: {}\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    var configure = function () {\n\t      this.setValidations(this.props.validations, this.props.required);\n\t\n\t      // Pass a function instead?\n\t      this.context.formsy.attachToForm(this);\n\t      //this.props._attachToForm(this);\n\t    }.bind(this);\n\t\n\t    if (!this.props.name) {\n\t      throw new Error('Form Input requires a name property when used');\n\t    }\n\t\n\t    /*\n\t    if (!this.props._attachToForm) {\n\t      return setTimeout(function () {\n\t        if (!this.isMounted()) return;\n\t        if (!this.props._attachToForm) {\n\t          throw new Error('Form Mixin requires component to be nested in a Form');\n\t        }\n\t        configure();\n\t      }.bind(this), 0);\n\t    }\n\t    */\n\t    configure();\n\t  },\n\t\n\t  // We have to make the validate method is kept when new props are added\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    this.setValidations(nextProps.validations, nextProps.required);\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate(prevProps) {\n\t\n\t    // If the value passed has changed, set it. If value is not passed it will\n\t    // internally update, and this will never run\n\t    if (!utils.isSame(this.props.value, prevProps.value)) {\n\t      this.setValue(this.props.value);\n\t    }\n\t\n\t    // If validations or required is changed, run a new validation\n\t    if (!utils.isSame(this.props.validations, prevProps.validations) || !utils.isSame(this.props.required, prevProps.required)) {\n\t      this.context.formsy.validate(this);\n\t    }\n\t  },\n\t\n\t  // Detach it when component unmounts\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.context.formsy.detachFromForm(this);\n\t    //this.props._detachFromForm(this);\n\t  },\n\t\n\t  setValidations: function setValidations(validations, required) {\n\t\n\t    // Add validations to the store itself as the props object can not be modified\n\t    this._validations = convertValidationsToObject(validations) || {};\n\t    this._requiredValidations = required === true ? { isDefaultRequiredValue: true } : convertValidationsToObject(required);\n\t  },\n\t\n\t  // We validate after the value has been set\n\t  setValue: function setValue(value) {\n\t    this.setState({\n\t      _value: value,\n\t      _isPristine: false\n\t    }, function () {\n\t      this.context.formsy.validate(this);\n\t      //this.props._validate(this);\n\t    }.bind(this));\n\t  },\n\t  resetValue: function resetValue() {\n\t    this.setState({\n\t      _value: this.state._pristineValue,\n\t      _isPristine: true\n\t    }, function () {\n\t      this.context.formsy.validate(this);\n\t      //this.props._validate(this);\n\t    });\n\t  },\n\t  getValue: function getValue() {\n\t    return this.state._value;\n\t  },\n\t  hasValue: function hasValue() {\n\t    return this.state._value !== '';\n\t  },\n\t  getErrorMessage: function getErrorMessage() {\n\t    var messages = this.getErrorMessages();\n\t    return messages.length ? messages[0] : null;\n\t  },\n\t  getErrorMessages: function getErrorMessages() {\n\t    return !this.isValid() || this.showRequired() ? this.state._externalError || this.state._validationError || [] : [];\n\t  },\n\t  isFormDisabled: function isFormDisabled() {\n\t    return this.context.formsy.isFormDisabled();\n\t    //return this.props._isFormDisabled();\n\t  },\n\t  isValid: function isValid() {\n\t    return this.state._isValid;\n\t  },\n\t  isPristine: function isPristine() {\n\t    return this.state._isPristine;\n\t  },\n\t  isFormSubmitted: function isFormSubmitted() {\n\t    return this.state._formSubmitted;\n\t  },\n\t  isRequired: function isRequired() {\n\t    return !!this.props.required;\n\t  },\n\t  showRequired: function showRequired() {\n\t    return this.state._isRequired;\n\t  },\n\t  showError: function showError() {\n\t    return !this.showRequired() && !this.isValid();\n\t  },\n\t  isValidValue: function isValidValue(value) {\n\t    return this.context.formsy.isValidValue.call(null, this, value);\n\t    //return this.props._isValidValue.call(null, this, value);\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tmodule.exports = {\n\t  arraysDiffer: function arraysDiffer(a, b) {\n\t    var isDifferent = false;\n\t    if (a.length !== b.length) {\n\t      isDifferent = true;\n\t    } else {\n\t      a.forEach(function (item, index) {\n\t        if (!this.isSame(item, b[index])) {\n\t          isDifferent = true;\n\t        }\n\t      }, this);\n\t    }\n\t    return isDifferent;\n\t  },\n\t\n\t  objectsDiffer: function objectsDiffer(a, b) {\n\t    var isDifferent = false;\n\t    if (Object.keys(a).length !== Object.keys(b).length) {\n\t      isDifferent = true;\n\t    } else {\n\t      Object.keys(a).forEach(function (key) {\n\t        if (!this.isSame(a[key], b[key])) {\n\t          isDifferent = true;\n\t        }\n\t      }, this);\n\t    }\n\t    return isDifferent;\n\t  },\n\t\n\t  isSame: function isSame(a, b) {\n\t    if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== (typeof b === 'undefined' ? 'undefined' : _typeof(b))) {\n\t      return false;\n\t    } else if (Array.isArray(a) && Array.isArray(b)) {\n\t      return !this.arraysDiffer(a, b);\n\t    } else if (typeof a === 'function') {\n\t      return a.toString() === b.toString();\n\t    } else if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object' && a !== null && b !== null) {\n\t      return !this.objectsDiffer(a, b);\n\t    }\n\t\n\t    return a === b;\n\t  },\n\t\n\t  find: function find(collection, fn) {\n\t    for (var i = 0, l = collection.length; i < l; i++) {\n\t      var item = collection[i];\n\t      if (fn(item)) {\n\t        return item;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = global.React || __webpack_require__(1);\n\tvar Mixin = __webpack_require__(2);\n\tmodule.exports = function () {\n\t  return function (Component) {\n\t    return React.createClass({\n\t      mixins: [Mixin],\n\t      render: function render() {\n\t        return React.createElement(Component, _extends({\n\t          setValidations: this.setValidations,\n\t          setValue: this.setValue,\n\t          resetValue: this.resetValue,\n\t          getValue: this.getValue,\n\t          hasValue: this.hasValue,\n\t          getErrorMessage: this.getErrorMessage,\n\t          getErrorMessages: this.getErrorMessages,\n\t          isFormDisabled: this.isFormDisabled,\n\t          isValid: this.isValid,\n\t          isPristine: this.isPristine,\n\t          isFormSubmitted: this.isFormSubmitted,\n\t          isRequired: this.isRequired,\n\t          showRequired: this.showRequired,\n\t          showError: this.showError,\n\t          isValidValue: this.isValidValue\n\t        }, this.props));\n\t      }\n\t    });\n\t  };\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = global.React || __webpack_require__(1);\n\tvar Mixin = __webpack_require__(2);\n\tmodule.exports = function (Component) {\n\t  return React.createClass({\n\t    displayName: 'Formsy(' + getDisplayName(Component) + ')',\n\t    mixins: [Mixin],\n\t\n\t    render: function render() {\n\t      var innerRef = this.props.innerRef;\n\t\n\t      var propsForElement = _extends({\n\t        setValidations: this.setValidations,\n\t        setValue: this.setValue,\n\t        resetValue: this.resetValue,\n\t        getValue: this.getValue,\n\t        hasValue: this.hasValue,\n\t        getErrorMessage: this.getErrorMessage,\n\t        getErrorMessages: this.getErrorMessages,\n\t        isFormDisabled: this.isFormDisabled,\n\t        isValid: this.isValid,\n\t        isPristine: this.isPristine,\n\t        isFormSubmitted: this.isFormSubmitted,\n\t        isRequired: this.isRequired,\n\t        showRequired: this.showRequired,\n\t        showError: this.showError,\n\t        isValidValue: this.isValidValue\n\t      }, this.props);\n\t\n\t      if (innerRef) {\n\t        propsForElement.ref = innerRef;\n\t      }\n\t      return React.createElement(Component, propsForElement);\n\t    }\n\t  });\n\t};\n\t\n\tfunction getDisplayName(Component) {\n\t  return Component.displayName || Component.name || (typeof Component === 'string' ? Component : 'Component');\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _isExisty = function _isExisty(value) {\n\t  return value !== null && value !== undefined;\n\t};\n\t\n\tvar isEmpty = function isEmpty(value) {\n\t  return value === '';\n\t};\n\t\n\tvar validations = {\n\t  isDefaultRequiredValue: function isDefaultRequiredValue(values, value) {\n\t    return value === undefined || value === '';\n\t  },\n\t  isExisty: function isExisty(values, value) {\n\t    return _isExisty(value);\n\t  },\n\t  matchRegexp: function matchRegexp(values, value, regexp) {\n\t    return !_isExisty(value) || isEmpty(value) || regexp.test(value);\n\t  },\n\t  isUndefined: function isUndefined(values, value) {\n\t    return value === undefined;\n\t  },\n\t  isEmptyString: function isEmptyString(values, value) {\n\t    return isEmpty(value);\n\t  },\n\t  isEmail: function isEmail(values, value) {\n\t    return validations.matchRegexp(values, value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n\t  },\n\t  isUrl: function isUrl(values, value) {\n\t    return validations.matchRegexp(values, value, /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i);\n\t  },\n\t  isTrue: function isTrue(values, value) {\n\t    return value === true;\n\t  },\n\t  isFalse: function isFalse(values, value) {\n\t    return value === false;\n\t  },\n\t  isNumeric: function isNumeric(values, value) {\n\t    if (typeof value === 'number') {\n\t      return true;\n\t    }\n\t    return validations.matchRegexp(values, value, /^[-+]?(?:\\d*[.])?\\d+$/);\n\t  },\n\t  isAlpha: function isAlpha(values, value) {\n\t    return validations.matchRegexp(values, value, /^[A-Z]+$/i);\n\t  },\n\t  isAlphanumeric: function isAlphanumeric(values, value) {\n\t    return validations.matchRegexp(values, value, /^[0-9A-Z]+$/i);\n\t  },\n\t  isInt: function isInt(values, value) {\n\t    return validations.matchRegexp(values, value, /^(?:[-+]?(?:0|[1-9]\\d*))$/);\n\t  },\n\t  isFloat: function isFloat(values, value) {\n\t    return validations.matchRegexp(values, value, /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][\\+\\-]?(?:\\d+))?$/);\n\t  },\n\t  isWords: function isWords(values, value) {\n\t    return validations.matchRegexp(values, value, /^[A-Z\\s]+$/i);\n\t  },\n\t  isSpecialWords: function isSpecialWords(values, value) {\n\t    return validations.matchRegexp(values, value, /^[A-Z\\s\\u00C0-\\u017F]+$/i);\n\t  },\n\t  isLength: function isLength(values, value, length) {\n\t    return !_isExisty(value) || isEmpty(value) || value.length === length;\n\t  },\n\t  equals: function equals(values, value, eql) {\n\t    return !_isExisty(value) || isEmpty(value) || value == eql;\n\t  },\n\t  equalsField: function equalsField(values, value, field) {\n\t    return value == values[field];\n\t  },\n\t  maxLength: function maxLength(values, value, length) {\n\t    return !_isExisty(value) || value.length <= length;\n\t  },\n\t  minLength: function minLength(values, value, length) {\n\t    return !_isExisty(value) || isEmpty(value) || value.length >= length;\n\t  }\n\t};\n\t\n\tmodule.exports = validations;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tfunction toObj(source) {\n\t  return Object.keys(source).reduce(function (output, key) {\n\t    var parentKey = key.match(/[^\\[]*/i);\n\t    var paths = key.match(/\\[.*?\\]/g) || [];\n\t    paths = [parentKey[0]].concat(paths).map(function (key) {\n\t      return key.replace(/\\[|\\]/g, '');\n\t    });\n\t    var currentPath = output;\n\t    while (paths.length) {\n\t      var pathKey = paths.shift();\n\t\n\t      if (pathKey in currentPath) {\n\t        currentPath = currentPath[pathKey];\n\t      } else {\n\t        currentPath[pathKey] = paths.length ? isNaN(paths[0]) ? {} : [] : source[key];\n\t        currentPath = currentPath[pathKey];\n\t      }\n\t    }\n\t\n\t    return output;\n\t  }, {});\n\t}\n\t\n\tfunction fromObj(obj) {\n\t  function recur(newObj, propName, currVal) {\n\t    if (Array.isArray(currVal) || Object.prototype.toString.call(currVal) === '[object Object]') {\n\t      Object.keys(currVal).forEach(function(v) {\n\t        recur(newObj, propName + \"[\" + v + \"]\", currVal[v]);\n\t      });\n\t      return newObj;\n\t    }\n\t\n\t    newObj[propName] = currVal;\n\t    return newObj;\n\t  }\n\t\n\t  var keys = Object.keys(obj);\n\t  return keys.reduce(function(newObj, propName) {\n\t    return recur(newObj, propName, obj[propName]);\n\t  }, {});\n\t}\n\t\n\tmodule.exports = {\n\t  fromObj: fromObj,\n\t  toObj: toObj\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// formsy-react.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca57d84d15d913bab0aa","var React = global.React || require('react');\nvar Formsy = {};\nvar validationRules = require('./validationRules.js');\nvar formDataToObject = require('form-data-to-object');\nvar utils = require('./utils.js');\nvar Mixin = require('./Mixin.js');\nvar HOC = require('./HOC.js');\nvar Decorator = require('./Decorator.js');\nvar options = {};\nvar emptyArray = [];\n\nFormsy.Mixin = Mixin;\nFormsy.HOC = HOC;\nFormsy.Decorator = Decorator;\n\nFormsy.defaults = function (passedOptions) {\n  options = passedOptions;\n};\n\nFormsy.addValidationRule = function (name, func) {\n  validationRules[name] = func;\n};\n\nFormsy.Form = React.createClass({\n  displayName: 'Formsy',\n  getInitialState: function () {\n    return {\n      isValid: true,\n      isSubmitting: false,\n      canChange: false\n    };\n  },\n  getDefaultProps: function () {\n    return {\n      onSuccess: function () {},\n      onError: function () {},\n      onSubmit: function () {},\n      onValidSubmit: function () {},\n      onInvalidSubmit: function () {},\n      onValid: function () {},\n      onInvalid: function () {},\n      onChange: function () {},\n      validationErrors: null,\n      preventExternalInvalidation: false\n    };\n  },\n\n  childContextTypes: {\n    formsy: React.PropTypes.object\n  },\n  getChildContext: function () {\n    return {\n      formsy: {\n        attachToForm: this.attachToForm,\n        detachFromForm: this.detachFromForm,\n        validate: this.validate,\n        isFormDisabled: this.isFormDisabled,\n        isValidValue: (component, value) => {\n          return this.runValidation(component, value).isValid;\n        }\n      }\n    }\n  },\n\n  // Add a map to store the inputs of the form, a model to store\n  // the values of the form and register child inputs\n  componentWillMount: function () {\n    this.inputs = [];\n  },\n\n  componentDidMount: function () {\n    this.validateForm();\n  },\n\n  componentWillUpdate: function () {\n    // Keep a reference to input names before form updates,\n    // to check if inputs has changed after render\n    this.prevInputNames = this.inputs.map(component => component.props.name);\n  },\n\n  componentDidUpdate: function () {\n\n    if (this.props.validationErrors && typeof this.props.validationErrors === 'object' && Object.keys(this.props.validationErrors).length > 0) {\n      this.setInputValidationErrors(this.props.validationErrors);\n    }\n\n    var newInputNames = this.inputs.map(component => component.props.name);\n    if (utils.arraysDiffer(this.prevInputNames, newInputNames)) {\n      this.validateForm();\n    }\n\n  },\n\n  // Allow resetting to specified data\n  reset: function (data) {\n    this.setFormPristine(true);\n    this.resetModel(data);\n  },\n\n  // Update model, submit to url prop and send the model\n  submit: function (event) {\n\n    event && event.preventDefault();\n\n    // Trigger form as not pristine.\n    // If any inputs have not been touched yet this will make them dirty\n    // so validation becomes visible (if based on isPristine)\n    this.setFormPristine(false);\n    var model = this.getModel();\n    this.props.onSubmit(model, this.resetModel, this.updateInputsWithError);\n    this.state.isValid ? this.props.onValidSubmit(model, this.resetModel, this.updateInputsWithError) : this.props.onInvalidSubmit(model, this.resetModel, this.updateInputsWithError);\n\n  },\n\n  mapModel: function (model) {\n\n    if (this.props.mapping) {\n      return this.props.mapping(model)\n    } else {\n      return formDataToObject.toObj(Object.keys(model).reduce((mappedModel, key) => {\n\n        var keyArray = key.split('.');\n        var base = mappedModel;\n        while (keyArray.length) {\n          var currentKey = keyArray.shift();\n          base = (base[currentKey] = keyArray.length ? base[currentKey] || {} : model[key]);\n        }\n\n        return mappedModel;\n\n      }, {}));\n    }\n  },\n\n  getModel: function () {\n    var currentValues = this.getCurrentValues();\n    return this.mapModel(currentValues);\n  },\n\n  // Reset each key in the model to the original / initial / specified value\n  resetModel: function (data) {\n    this.inputs.forEach(component => {\n      var name = component.props.name;\n      if (data && data.hasOwnProperty(name)) {\n        component.setValue(data[name]);\n      } else {\n        component.resetValue();\n      }\n    });\n    this.validateForm();\n  },\n\n  setInputValidationErrors: function (errors) {\n    this.inputs.forEach(component => {\n      var name = component.props.name;\n      var args = [{\n        _isValid: !(name in errors),\n        _validationError: typeof errors[name] === 'string' ? [errors[name]] : errors[name]\n      }];\n      component.setState.apply(component, args);\n    });\n  },\n\n  // Checks if the values have changed from their initial value\n  isChanged: function() {\n    return !utils.isSame(this.getPristineValues(), this.getCurrentValues());\n  },\n\n   getPristineValues: function() {\n    return this.inputs.reduce((data, component) => {\n      var name = component.props.name;\n      data[name] = component.props.value;\n      return data;\n    }, {});\n  },\n\n  // Go through errors from server and grab the components\n  // stored in the inputs map. Change their state to invalid\n  // and set the serverError message\n  updateInputsWithError: function (errors) {\n    Object.keys(errors).forEach((name, index) => {\n      var component = utils.find(this.inputs, component => component.props.name === name);\n      if (!component) {\n        throw new Error('You are trying to update an input that does not exist. ' +\n          'Verify errors object with input names. ' + JSON.stringify(errors));\n      }\n      var args = [{\n        _isValid: this.props.preventExternalInvalidation || false,\n        _externalError: typeof errors[name] === 'string' ? [errors[name]] : errors[name]\n      }];\n      component.setState.apply(component, args);\n    });\n  },\n\n  isFormDisabled: function () {\n    return this.props.disabled;\n  },\n\n  getCurrentValues: function () {\n    return this.inputs.reduce((data, component) => {\n      var name = component.props.name;\n      data[name] = component.state._value;\n      return data;\n    }, {});\n  },\n\n  setFormPristine: function (isPristine) {\n    this.setState({\n      _formSubmitted: !isPristine\n    });\n\n    // Iterate through each component and set it as pristine\n    // or \"dirty\".\n    this.inputs.forEach((component, index) => {\n      component.setState({\n        _formSubmitted: !isPristine,\n        _isPristine: isPristine\n      });\n    });\n  },\n\n  // Use the binded values and the actual input value to\n  // validate the input and set its state. Then check the\n  // state of the form itself\n  validate: function (component) {\n\n    // Trigger onChange\n    if (this.state.canChange) {\n      this.props.onChange(this.getCurrentValues(), this.isChanged());\n    }\n\n    var validation = this.runValidation(component);\n    // Run through the validations, split them up and call\n    // the validator IF there is a value or it is required\n    component.setState({\n      _isValid: validation.isValid,\n      _isRequired: validation.isRequired,\n      _validationError: validation.error,\n      _externalError: null\n    }, this.validateForm);\n\n  },\n\n  // Checks validation on current value or a passed value\n  runValidation: function (component, value) {\n\n    var currentValues = this.getCurrentValues();\n    var validationErrors = component.props.validationErrors;\n    var validationError = component.props.validationError;\n    value = arguments.length === 2 ? value : component.state._value;\n\n    var validationResults = this.runRules(value, currentValues, component._validations);\n    var requiredResults = this.runRules(value, currentValues, component._requiredValidations);\n\n    // the component defines an explicit validate function\n    if (typeof component.validate === \"function\") {\n      validationResults.failed = component.validate() ? [] : ['failed'];\n    }\n\n    var isRequired = Object.keys(component._requiredValidations).length ? !!requiredResults.success.length : false;\n    var isValid = !validationResults.failed.length && !(this.props.validationErrors && this.props.validationErrors[component.props.name]);\n\n    return {\n      isRequired: isRequired,\n      isValid: isRequired ? false : isValid,\n      error: (function () {\n\n        if (isValid && !isRequired) {\n          return emptyArray;\n        }\n\n        if (validationResults.errors.length) {\n          return validationResults.errors;\n        }\n\n        if (this.props.validationErrors && this.props.validationErrors[component.props.name]) {\n          return typeof this.props.validationErrors[component.props.name] === 'string' ? [this.props.validationErrors[component.props.name]] : this.props.validationErrors[component.props.name];\n        }\n\n        if (isRequired) {\n          var error = validationErrors[requiredResults.success[0]];\n          return error ? [error] : null;\n        }\n\n        if (validationResults.failed.length) {\n          return validationResults.failed.map(function(failed) {\n            return validationErrors[failed] ? validationErrors[failed] : validationError;\n          }).filter(function(x, pos, arr) {\n            // Remove duplicates\n            return arr.indexOf(x) === pos;\n          });\n        }\n\n      }.call(this))\n    };\n\n  },\n\n  runRules: function (value, currentValues, validations) {\n\n    var results = {\n      errors: [],\n      failed: [],\n      success: []\n    };\n    if (Object.keys(validations).length) {\n      Object.keys(validations).forEach(function (validationMethod) {\n\n        if (validationRules[validationMethod] && typeof validations[validationMethod] === 'function') {\n          throw new Error('Formsy does not allow you to override default validations: ' + validationMethod);\n        }\n\n        if (!validationRules[validationMethod] && typeof validations[validationMethod] !== 'function') {\n          throw new Error('Formsy does not have the validation rule: ' + validationMethod);\n        }\n\n        if (typeof validations[validationMethod] === 'function') {\n          var validation = validations[validationMethod](currentValues, value);\n          if (typeof validation === 'string') {\n            results.errors.push(validation);\n            results.failed.push(validationMethod);\n          } else if (!validation) {\n            results.failed.push(validationMethod);\n          }\n          return;\n\n        } else if (typeof validations[validationMethod] !== 'function') {\n          var validation = validationRules[validationMethod](currentValues, value, validations[validationMethod]);\n          if (typeof validation === 'string') {\n            results.errors.push(validation);\n            results.failed.push(validationMethod);\n          } else if (!validation) {\n            results.failed.push(validationMethod);\n          } else {\n            results.success.push(validationMethod);\n          }\n          return;\n\n        }\n\n        return results.success.push(validationMethod);\n\n      });\n    }\n\n    return results;\n\n  },\n\n  // Validate the form by going through all child input components\n  // and check their state\n  validateForm: function () {\n\n    // We need a callback as we are validating all inputs again. This will\n    // run when the last component has set its state\n    var onValidationComplete = function () {\n      var allIsValid = this.inputs.every(component => {\n        return component.state._isValid;\n      });\n\n      this.setState({\n        isValid: allIsValid\n      });\n\n      if (allIsValid) {\n        this.props.onValid();\n      } else {\n        this.props.onInvalid();\n      }\n\n      // Tell the form that it can start to trigger change events\n      this.setState({\n        canChange: true\n      });\n\n    }.bind(this);\n\n    // Run validation again in case affected by other inputs. The\n    // last component validated will run the onValidationComplete callback\n    this.inputs.forEach((component, index) => {\n      var validation = this.runValidation(component);\n      if (validation.isValid && component.state._externalError) {\n        validation.isValid = false;\n      }\n      component.setState({\n        _isValid: validation.isValid,\n        _isRequired: validation.isRequired,\n        _validationError: validation.error,\n        _externalError: !validation.isValid && component.state._externalError ? component.state._externalError : null\n      }, index === this.inputs.length - 1 ? onValidationComplete : null);\n    });\n\n    // If there are no inputs, set state where form is ready to trigger\n    // change event. New inputs might be added later\n    if (!this.inputs.length && this.isMounted()) {\n      this.setState({\n        canChange: true\n      });\n    }\n  },\n\n  // Method put on each input component to register\n  // itself to the form\n  attachToForm: function (component) {\n\n    if (this.inputs.indexOf(component) === -1) {\n      this.inputs.push(component);\n    }\n\n    this.validate(component);\n  },\n\n  // Method put on each input component to unregister\n  // itself from the form\n  detachFromForm: function (component) {\n    var componentPos = this.inputs.indexOf(component);\n\n    if (componentPos !== -1) {\n      this.inputs = this.inputs.slice(0, componentPos)\n        .concat(this.inputs.slice(componentPos + 1));\n    }\n\n    this.validateForm();\n  },\n  render: function () {\n    var {\n      mapping,\n      validationErrors,\n      onSubmit,\n      onValid,\n      onValidSubmit,\n      onInvalid,\n      onInvalidSubmit,\n      onChange,\n      reset,\n      preventExternalInvalidation,\n      onSuccess,\n      onError,\n      ...nonFormsyProps\n    } = this.props;\n\n    return (\n      <form {...nonFormsyProps} onSubmit={this.submit}>\n        {this.props.children}\n      </form>\n    );\n\n  }\n});\n\nif (!global.exports && !global.module && (!global.define || !global.define.amd)) {\n  global.Formsy = Formsy;\n}\n\nmodule.exports = Formsy;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 1\n// module chunks = 0","var utils = require('./utils.js');\nvar React = global.React || require('react');\n\nvar convertValidationsToObject = function (validations) {\n\n  if (typeof validations === 'string') {\n\n    return validations.split(/\\,(?![^{\\[]*[}\\]])/g).reduce(function (validations, validation) {\n      var args = validation.split(':');\n      var validateMethod = args.shift();\n\n      args = args.map(function (arg) {\n        try {\n          return JSON.parse(arg);\n        } catch (e) {\n          return arg; // It is a string if it can not parse it\n        }\n      });\n\n      if (args.length > 1) {\n        throw new Error('Formsy does not support multiple args on string validations. Use object format of validations instead.');\n      }\n\n      validations[validateMethod] = args.length ? args[0] : true;\n      return validations;\n    }, {});\n\n  }\n\n  return validations || {};\n};\n\nmodule.exports = {\n  getInitialState: function () {\n    return {\n      _value: this.props.value,\n      _isRequired: false,\n      _isValid: true,\n      _isPristine: true,\n      _pristineValue: this.props.value,\n      _validationError: [],\n      _externalError: null,\n      _formSubmitted: false\n    };\n  },\n  contextTypes: {\n    formsy: React.PropTypes.object // What about required?\n  },\n  getDefaultProps: function () {\n    return {\n      validationError: '',\n      validationErrors: {}\n    };\n  },\n\n  componentWillMount: function () {\n    var configure = function () {\n      this.setValidations(this.props.validations, this.props.required);\n\n      // Pass a function instead?\n      this.context.formsy.attachToForm(this);\n      //this.props._attachToForm(this);\n    }.bind(this);\n\n    if (!this.props.name) {\n      throw new Error('Form Input requires a name property when used');\n    }\n\n    /*\n    if (!this.props._attachToForm) {\n      return setTimeout(function () {\n        if (!this.isMounted()) return;\n        if (!this.props._attachToForm) {\n          throw new Error('Form Mixin requires component to be nested in a Form');\n        }\n        configure();\n      }.bind(this), 0);\n    }\n    */\n    configure();\n  },\n\n  // We have to make the validate method is kept when new props are added\n  componentWillReceiveProps: function (nextProps) {\n    this.setValidations(nextProps.validations, nextProps.required);\n\n  },\n\n  componentDidUpdate: function (prevProps) {\n\n    // If the value passed has changed, set it. If value is not passed it will\n    // internally update, and this will never run\n    if (!utils.isSame(this.props.value, prevProps.value)) {\n      this.setValue(this.props.value);\n    }\n\n    // If validations or required is changed, run a new validation\n    if (!utils.isSame(this.props.validations, prevProps.validations) || !utils.isSame(this.props.required, prevProps.required)) {\n      this.context.formsy.validate(this);\n    }\n  },\n\n  // Detach it when component unmounts\n  componentWillUnmount: function () {\n    this.context.formsy.detachFromForm(this);\n    //this.props._detachFromForm(this);\n  },\n\n  setValidations: function (validations, required) {\n\n    // Add validations to the store itself as the props object can not be modified\n    this._validations = convertValidationsToObject(validations) || {};\n    this._requiredValidations = required === true ? {isDefaultRequiredValue: true} : convertValidationsToObject(required);\n\n  },\n\n  // We validate after the value has been set\n  setValue: function (value) {\n    this.setState({\n      _value: value,\n      _isPristine: false\n    }, function () {\n      this.context.formsy.validate(this);\n      //this.props._validate(this);\n    }.bind(this));\n  },\n  resetValue: function () {\n    this.setState({\n      _value: this.state._pristineValue,\n      _isPristine: true\n    }, function () {\n      this.context.formsy.validate(this);\n      //this.props._validate(this);\n    });\n  },\n  getValue: function () {\n    return this.state._value;\n  },\n  hasValue: function () {\n    return this.state._value !== '';\n  },\n  getErrorMessage: function () {\n    var messages = this.getErrorMessages();\n    return messages.length ? messages[0] : null;\n  },\n  getErrorMessages: function () {\n    return !this.isValid() || this.showRequired() ? (this.state._externalError || this.state._validationError || []) : [];\n  },\n  isFormDisabled: function () {\n    return this.context.formsy.isFormDisabled();\n    //return this.props._isFormDisabled();\n  },\n  isValid: function () {\n    return this.state._isValid;\n  },\n  isPristine: function () {\n    return this.state._isPristine;\n  },\n  isFormSubmitted: function () {\n    return this.state._formSubmitted;\n  },\n  isRequired: function () {\n    return !!this.props.required;\n  },\n  showRequired: function () {\n    return this.state._isRequired;\n  },\n  showError: function () {\n    return !this.showRequired() && !this.isValid();\n  },\n  isValidValue: function (value) {\n    return this.context.formsy.isValidValue.call(null, this, value);\n    //return this.props._isValidValue.call(null, this, value);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mixin.js","module.exports = {\n  arraysDiffer: function (a, b) {\n    var isDifferent = false;\n    if (a.length !== b.length) {\n      isDifferent = true;\n    } else {\n      a.forEach(function (item, index) {\n        if (!this.isSame(item, b[index])) {\n          isDifferent = true;\n        }\n      }, this);\n    }\n    return isDifferent;\n  },\n\n  objectsDiffer: function (a, b) {\n    var isDifferent = false;\n    if (Object.keys(a).length !== Object.keys(b).length) {\n      isDifferent = true;\n    } else {\n      Object.keys(a).forEach(function (key) {\n        if (!this.isSame(a[key], b[key])) {\n          isDifferent = true;\n        }\n      }, this);\n    }\n    return isDifferent;\n  },\n\n  isSame: function (a, b) {\n    if (typeof a !== typeof b) {\n      return false;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n      return !this.arraysDiffer(a, b);\n    } else if (typeof a === 'function') {\n      return a.toString() === b.toString();\n    } else if (typeof a === 'object' && a !== null && b !== null) {\n      return !this.objectsDiffer(a, b);\n    }\n\n    return a === b;\n  },\n\n  find: function (collection, fn) {\n    for (var i = 0, l = collection.length; i < l; i++) {\n      var item = collection[i];\n      if (fn(item)) {\n        return item;\n      }\n    }\n    return null;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","var React = global.React || require('react');\nvar Mixin = require('./Mixin.js');\nmodule.exports = function () {\n  return function (Component) {\n    return React.createClass({\n      mixins: [Mixin],\n      render: function () {\n        return React.createElement(Component, {\n          setValidations: this.setValidations,\n          setValue: this.setValue,\n          resetValue: this.resetValue,\n          getValue: this.getValue,\n          hasValue: this.hasValue,\n          getErrorMessage: this.getErrorMessage,\n          getErrorMessages: this.getErrorMessages,\n          isFormDisabled: this.isFormDisabled,\n          isValid: this.isValid,\n          isPristine: this.isPristine,\n          isFormSubmitted: this.isFormSubmitted,\n          isRequired: this.isRequired,\n          showRequired: this.showRequired,\n          showError: this.showError,\n          isValidValue: this.isValidValue,\n          ...this.props\n        });\n      }\n    });\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Decorator.js","var React = global.React || require('react');\nvar Mixin = require('./Mixin.js');\nmodule.exports = function (Component) {\n  return React.createClass({\n    displayName: 'Formsy(' + getDisplayName(Component) + ')',\n    mixins: [Mixin],\n\n    render: function () {\n      const { innerRef } = this.props;\n      const propsForElement = {\n        setValidations: this.setValidations,\n        setValue: this.setValue,\n        resetValue: this.resetValue,\n        getValue: this.getValue,\n        hasValue: this.hasValue,\n        getErrorMessage: this.getErrorMessage,\n        getErrorMessages: this.getErrorMessages,\n        isFormDisabled: this.isFormDisabled,\n        isValid: this.isValid,\n        isPristine: this.isPristine,\n        isFormSubmitted: this.isFormSubmitted,\n        isRequired: this.isRequired,\n        showRequired: this.showRequired,\n        showError: this.showError,\n        isValidValue: this.isValidValue,\n        ...this.props\n      };\n\n      if (innerRef) {\n        propsForElement.ref = innerRef;\n      }\n      return React.createElement(Component, propsForElement);\n    }\n  });\n};\n\nfunction getDisplayName(Component) {\n  return (\n    Component.displayName ||\n    Component.name ||\n    (typeof Component === 'string' ? Component : 'Component')\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/HOC.js","var isExisty = function (value) {\n  return value !== null && value !== undefined;\n};\n\nvar isEmpty = function (value) {\n  return value === '';\n};\n\nvar validations = {\n  isDefaultRequiredValue: function (values, value) {\n    return value === undefined || value === '';\n  },\n  isExisty: function (values, value) {\n    return isExisty(value);\n  },\n  matchRegexp: function (values, value, regexp) {\n    return !isExisty(value) || isEmpty(value) || regexp.test(value);\n  },\n  isUndefined: function (values, value) {\n    return value === undefined;\n  },\n  isEmptyString: function (values, value) {\n    return isEmpty(value);\n  },\n  isEmail: function (values, value) {\n    return validations.matchRegexp(values, value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n  },\n  isUrl: function (values, value) {\n    return validations.matchRegexp(values, value, /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i);\n  },\n  isTrue: function (values, value) {\n    return value === true;\n  },\n  isFalse: function (values, value) {\n    return value === false;\n  },\n  isNumeric: function (values, value) {\n    if (typeof value === 'number') {\n      return true;\n    }\n    return validations.matchRegexp(values, value, /^[-+]?(?:\\d*[.])?\\d+$/);\n  },\n  isAlpha: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z]+$/i);\n  },\n  isAlphanumeric: function (values, value) {\n    return validations.matchRegexp(values, value, /^[0-9A-Z]+$/i);\n  },\n  isInt: function (values, value) {\n    return validations.matchRegexp(values, value, /^(?:[-+]?(?:0|[1-9]\\d*))$/);\n  },\n  isFloat: function (values, value) {\n    return validations.matchRegexp(values, value, /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][\\+\\-]?(?:\\d+))?$/);\n  },\n  isWords: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z\\s]+$/i);\n  },\n  isSpecialWords: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z\\s\\u00C0-\\u017F]+$/i);\n  },\n  isLength: function (values, value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length === length;\n  },\n  equals: function (values, value, eql) {\n    return !isExisty(value) || isEmpty(value) || value == eql;\n  },\n  equalsField: function (values, value, field) {\n    return value == values[field];\n  },\n  maxLength: function (values, value, length) {\n    return !isExisty(value) || value.length <= length;\n  },\n  minLength: function (values, value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length >= length;\n  }\n};\n\nmodule.exports = validations;\n\n\n\n// WEBPACK FOOTER //\n// ./src/validationRules.js","function toObj(source) {\n  return Object.keys(source).reduce(function (output, key) {\n    var parentKey = key.match(/[^\\[]*/i);\n    var paths = key.match(/\\[.*?\\]/g) || [];\n    paths = [parentKey[0]].concat(paths).map(function (key) {\n      return key.replace(/\\[|\\]/g, '');\n    });\n    var currentPath = output;\n    while (paths.length) {\n      var pathKey = paths.shift();\n\n      if (pathKey in currentPath) {\n        currentPath = currentPath[pathKey];\n      } else {\n        currentPath[pathKey] = paths.length ? isNaN(paths[0]) ? {} : [] : source[key];\n        currentPath = currentPath[pathKey];\n      }\n    }\n\n    return output;\n  }, {});\n}\n\nfunction fromObj(obj) {\n  function recur(newObj, propName, currVal) {\n    if (Array.isArray(currVal) || Object.prototype.toString.call(currVal) === '[object Object]') {\n      Object.keys(currVal).forEach(function(v) {\n        recur(newObj, propName + \"[\" + v + \"]\", currVal[v]);\n      });\n      return newObj;\n    }\n\n    newObj[propName] = currVal;\n    return newObj;\n  }\n\n  var keys = Object.keys(obj);\n  return keys.reduce(function(newObj, propName) {\n    return recur(newObj, propName, obj[propName]);\n  }, {});\n}\n\nmodule.exports = {\n  fromObj: fromObj,\n  toObj: toObj\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/form-data-to-object/index.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}